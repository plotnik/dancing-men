package dancing.men;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;

public class DancingMenFrame extends javax.swing.JFrame {

    private final static String DANCING_MEN_FONT = "GlDancingmen-PvXr.ttf";

    private String text = "hello world";

    /**
     * Creates new form DancingMenFrame
     */
    public DancingMenFrame() {
        initComponents();
        
        try {
            
            Color yellow = new Color(248, 244, 208);
            //getContentPane().setBackground(yellow);
            dancingPanel.setBackground(yellow);
            normalPanel.setBackground(yellow);

            Font dancingFont = addFont("/" + DANCING_MEN_FONT, 64f);

            dancingLabel.setFont(dancingFont);
            dancingLabel.setText("<html>" + text);
            
            Font normalFont = new Font(Font.SERIF, Font.PLAIN, 60);
            normalLabel.setFont(normalFont);
            normalLabel.setText(text);
            
            setLocationRelativeTo(null);
            
        } catch (Exception ex) {
            Logger.getLogger(DancingMenFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private Font addFont(String ttfFile, float fontSize) throws FontFormatException, IOException {

        // Load the font
        InputStream is = getClass().getResourceAsStream(ttfFile);
        Font font = Font.createFont(Font.TRUETYPE_FONT, is);
        // Scale the font
        Font scaledFont = font.deriveFont(Font.PLAIN, fontSize);

        // Font font = Font.createFont(Font.TRUETYPE_FONT, new File(ttfFile));

        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        ge.registerFont(scaledFont);
        return scaledFont;
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dancingPanel = new javax.swing.JPanel();
        dancingLabel = new javax.swing.JLabel();
        normalPanel = new javax.swing.JPanel();
        normalLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dancing Men");

        dancingPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        dancingLabel.setText("Dancing Text");

        javax.swing.GroupLayout dancingPanelLayout = new javax.swing.GroupLayout(dancingPanel);
        dancingPanel.setLayout(dancingPanelLayout);
        dancingPanelLayout.setHorizontalGroup(
            dancingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(dancingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dancingPanelLayout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addComponent(dancingLabel)
                    .addContainerGap(273, Short.MAX_VALUE)))
        );
        dancingPanelLayout.setVerticalGroup(
            dancingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(dancingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dancingPanelLayout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addComponent(dancingLabel)
                    .addContainerGap(34, Short.MAX_VALUE)))
        );

        normalPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        normalLabel.setText("Normal Text");

        javax.swing.GroupLayout normalPanelLayout = new javax.swing.GroupLayout(normalPanel);
        normalPanel.setLayout(normalPanelLayout);
        normalPanelLayout.setHorizontalGroup(
            normalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(normalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(normalLabel)
                .addContainerGap(638, Short.MAX_VALUE))
        );
        normalPanelLayout.setVerticalGroup(
            normalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(normalPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(normalLabel)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(normalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dancingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dancingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(normalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DancingMenFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(DancingMenFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(DancingMenFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(DancingMenFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DancingMenFrame frame = new DancingMenFrame();
                if (args.length > 0) {
                    frame.setText(args[0]);
                }
                frame.setVisible(true);
            }
        });
    }

    public void setText(String text) {
        this.text = text;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dancingLabel;
    private javax.swing.JPanel dancingPanel;
    private javax.swing.JLabel normalLabel;
    private javax.swing.JPanel normalPanel;
    // End of variables declaration//GEN-END:variables


}
